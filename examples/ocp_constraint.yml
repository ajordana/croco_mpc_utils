# Templated YAML file to setup an OCP using Crocoddyl

dt: 0.05                                             # OCP integration step 
N_h: 100                                             # Horizon length in nodes
maxiter: 100                                         # Max number of iterations in DDP
q0: [0., 1.047, 0., -1.13, 0.2,  0.79, 0.]           # Initial robot joint configuration
dq0: [0.,0.,0.,0.,0.,0.,0.]                          # Initial robot joint velocity
WHICH_PLOTS: ['ee']                                  # which plots to generate 

# Constraints terms
# to select from the list : 'stateBox', 'ctrlBox', 'translationBox', 'None'

#### FOR THE JOINT CONSTRAINT
WHICH_CONSTRAINTS: ['stateBox', "collisionBox"]
stateLowerLimit: [-0.05, -2.0944 , -2.96706, -2.0944 , -2.96706, -2.0944 , -3.05433,
                  -1.48353, -1.48353, -1.74533, -1.309  , -2.26893, -2.35619, -2.35619] #'DEFAULT'
stateUpperLimit: [0.05, 2.0944 , 2.96706, 2.0944 , 2.96706, 2.0944 , 3.05433,
                  1.48353, 1.48353, 1.74533, 1.309  , 2.26893, 2.35619, 2.35619] #'DEFAULT'

#### FOR THE COLLISION CONSTRAINT
safetyMargin: 0.02
collisionPairs:     
- ["L7_1", "L2_5"]
- ["L7_2", "L2_5"]
# The collision shapes must be in the collision model of the robot, and must be hppfcl.ShapeBase.
# To have an as efficient collision avoidance as possible, it must be between strictly convex objects, such as 
# capsules and spheres.

# ### FOR THE HALF-PLANE CONSTRAINT
# WHICH_CONSTRAINTS: ['translationBox']
# eeLowerLimit: [-10., 0., 0.]
# eeUpperLimit: [10., 10., 10.]
# eeConstraintFrameName: 'contact'


# Cost function terms
# to select from the list : 'stateReg', 'ctrlReg', 'ctrlRegGrav', 'stateLim', 'ctrlLim'
#                           'force', 'friction', 'translation', 'velocity', 'placement'
WHICH_COSTS: ['translation', 'ctrlRegGrav', 'stateReg'] 

# Cost function weights and activations
 # 'stateReg' : state regularization  
stateRegWeights: [20., 20., 20., 10., 10., 10, 10., 2., 2., 2., 2., 2., 2., 2.]
stateRegWeight: 0.01
stateRegWeightTerminal: 0.01
stateRegRef: 'DEFAULT' # 'DEFAULT' = $([q0, dq0])


 # 'ctrlRegGrav' : torque regularization 
ctrlRegGravWeights: [1., 1., 1., 1., 1., 1., 1.]
ctrlRegGravWeight: 0.0001
ctrlRegGravWeightTerminal: 0.0001


 # 'translation' : end-effector frame translation 
frameTranslationWeights:  [1., 1., 1.] # 0,0,1 for plane
frameTranslationWeight: 10.
frameTranslationWeightTerminal: 10. 
frameTranslationRef: [0.6, 0., 0.155] # 0.3
frameTranslationFrameName: 'contact'  
